{"version":3,"sources":["components/MyMessage.jsx","components/TheirMessage.jsx","components/MessageForm.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MyMesssage","message","attachments","lenght","src","file","alt","className","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","length","marginLeft","MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","trim","sendMessage","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","display","files","bind","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","console","log","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21ca92bf.chunk.js","sourcesContent":["const MyMesssage = ({message}) => {\r\n    if(message.attachments && message.attachments.lenght > 0){\r\n        return (\r\n            <img \r\n                src={message.attachments[0].file}\r\n                alt=\"messahe-attachment\"\r\n                className=\"message-image\"\r\n                style={{float: 'right' }}\r\n            />        )\r\n    }\r\n\r\n    return(\r\n        <div className=\"message\" style={{float: 'right', marginRight: '18px', color: \"white\", backgroundColor:'#3B2A50'}}>\r\n            {message.text}            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyMesssage;","const TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser =\r\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avater\"\r\n          style={{\r\n            backgroundImage: message.sender && `url(${message.sender.avatar})`,\r\n          }}\r\n        />\r\n      )}\r\n      {message.attachments && message.attachments.length > 0\r\n        ? (  \r\n            <img \r\n            src={message.attachments[0].file}\r\n            alt=\"message-attachment\"\r\n            className=\"message-image\"\r\n            style={{marginLeft: isFirstMessageByUser ? '4px': '48px' }}\r\n            />   \r\n        )\r\n        : (\r\n            <div className=\"message\" style={{float: 'left', backgroundColor:'#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n            {message.text}            \r\n        </div>\r\n        )\r\n    \r\n    }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheirMessage;\r\n","import {useState} from 'react';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\n\r\nconst MessageForm = (props) => {\r\n\r\n    const [value, setValue] = useState('');\r\n    const {chatId, creds} = props;\r\n\r\n    const handleChange = (event) => \r\n    {\r\n        setValue(event.target.value)\r\n        isTyping(props, chatId)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const text = value.trim();\r\n\r\n        if (text.length > 0) {\r\n            sendMessage(creds, chatId, {text});\r\n        }\r\n        setValue('');\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, {files: event.target.files, text:' '})\r\n    }\r\n    return(\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input \r\n                className='message-input'\r\n                placeholder='Send a message...'\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n        \r\n        <label htmlFor=\"upload-button\">\r\n            <span className=\"image-button\">\r\n                <PictureOutlined className='picture-icon'/>\r\n            </span>\r\n        </label>\r\n\r\n        <input type=\"file\" \r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{display: \"none\"}}\r\n                onChange={handleUpload.bind(this)}\r\n                />\r\n\r\n                <button type='submit' className='send-button'>\r\n                    <SendOutlined className='send-icon' />\r\n                </button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nexport default MessageForm;","import MyMesssage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\nimport MessageForm from \"./MessageForm\";\r\n\r\nconst ChatFeed= (props) => {\r\n    const {chats, activeChat, userName, messages} = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => chat.people.map( (person, index) => person.last_read === message.id && (\r\n     <div\r\n     key = {`read_${index}`}\r\n     className = \"read-receipt\"\r\n     style = {{\r\n         float: isMyMessage ? 'right' : 'left',\r\n         backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\r\n     }}\r\n     >\r\n      \r\n     </div>)) \r\n\r\n    const renderMessages = () =>{\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index===0 ? null : keys[index-1];\r\n            const isMyMessage = userName === message.sender.userName;\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{width:'100%'}}>\r\n\r\n                    <div className=\"message-block\">\r\n                        {   isMyMessage\r\n                                ? <MyMesssage message={message}/>\r\n                                : <TheirMessage message={message} lastMessageKey={messages[lastMessageKey]}/>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"read-receiepts\" style={{marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n  \r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n\r\n                <div className=\"chat-title\">\r\n                    {chat?.title}\r\n                </div>\r\n\r\n                <div className=\"chat-subtitle\">\r\n                </div>\r\n\r\n                {renderMessages()}\r\n\r\n                <div style={{height: '100px' }} />\r\n\r\n                <div className=\"message-form-container\">\r\n                    <MessageForm {...props} chatId={activeChat}/>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed;","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst projectID = \"0d5168d2-784a-47d9-bfbc-37b0efd8248a\";\r\n\r\nconst LoginForm = () => {\r\n    \r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async(e) =>{\r\n        e.preventDefault();\r\n        \r\n        const authObject = { 'Project-ID': projectID, 'User-Name': username, 'User-Secret': password}\r\n        console.log(authObject);\r\n            try{\r\n                await axios.get('https://api.chatengine.io/chats/',{headers:authObject});\r\n                localStorage.setItem('username', username);\r\n                localStorage.setItem('password', password)\r\n                \r\n                window.location.reload();\r\n                setError('');\r\n            } catch(err){\r\n                setError('oops, incorrect credentials');\r\n            }\r\n    }\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">\r\n                    Chat Application\r\n                </h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n                    <div align=\"center\">\r\n                        <button className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <h1>{error}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { ChatEngine } from 'react-chat-engine';\nimport './App.css';\nimport ChatFeed from './components/ChatFeed.jsx';\nimport LoginForm from './components/LoginForm';\n\n\nfunction App() {\n  if(!localStorage.getItem('username')) return <LoginForm />\n  return (\n    <div className=\"App\">\n    <ChatEngine \n      height=\"100vh\"\n      projectID=\"0d5168d2-784a-47d9-bfbc-37b0efd8248a\"\n      userName=\"barbi\"\n      userSecret=\"123\"\n      renderChatFeed= {(chatAppProps) => <ChatFeed {...chatAppProps} />}\n      onNewMessage = {() =>new Audio('https://chat-engine-assets.s3.amazonws.com/click.mp3').play}\n    />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}